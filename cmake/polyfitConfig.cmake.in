@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

# Ensure dependencies exist for consumers.
# If a consumer already has these targets, the guards avoid redundant lookups.

if (NOT TARGET xsimd)
  find_dependency(xsimd CONFIG)
endif ()

if (NOT TARGET std::mdspan)
  find_dependency(mdspan CONFIG)
  # Create compat alias if only mdspan::mdspan was provided
  if (NOT TARGET std::mdspan AND TARGET mdspan::mdspan)
    add_library(std::mdspan INTERFACE IMPORTED)
    target_link_libraries(std::mdspan INTERFACE mdspan::mdspan)
  endif ()
endif ()

# Bring in the exported polyfit target(s)
include("${CMAKE_CURRENT_LIST_DIR}/polyfitTargets.cmake")

# Re-attach dependency link interface for the installed target.
# This keeps install(EXPORT) happy (nothing "requires" non-exported targets),
# while consumers still link against the proper deps.
if (TARGET polyfit::polyfit)
  target_link_libraries(polyfit::polyfit INTERFACE xsimd std::mdspan)
endif ()
